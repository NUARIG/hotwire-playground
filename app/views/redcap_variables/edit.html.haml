%h2
  Editing Variable
= turbo_frame_tag dom_id(@redcap_variable)  do
  %li.collection-item
    = form_with(model: @redcap_variable, url: redcap_project_redcap_data_dictionary_redcap_variable_url(@redcap_project, @redcap_variable), method: 'patch', html: { id: dom_id(@redcap_variable), class: 'redcap_variable_form', data: { controller: 'redcap-variable' } }) do |form|
      .row
        .col.s12.left-align
          %h3
            = "Name: #{@redcap_variable.name}"
      .row
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_form_name'}
            Form Name
          %input{ id: 'redcap_variable_form_name', disabled: 'disabled', value: @redcap_variable.form_name, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_type'}
            Field Type
          %input{ id: 'redcap_variable_field_type', disabled: 'disabled', value: @redcap_variable.field_type, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_type_normalized'}
            Field Type Normalized
          %input{ id: 'redcap_variable_field_type_normalized', disabled: 'disabled', value: @redcap_variable.field_type_normalized, type: 'text' }
      .row
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_type_curated'}
            Field Type Curated
          %input{ id: 'redcap_variable_field_type_curated', disabled: 'disabled', value: @redcap_variable.field_type_curated, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_text_validation_type'}
            Text Validation Type
          %input{ id: 'redcap_variable_text_validation_type', disabled: 'disabled', value: @redcap_variable.text_validation_type, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_annotation'}
            Field Annotation
          %input{ id: 'redcap_variable_field_annotation', disabled: 'disabled', value: @redcap_variable.field_annotation, type: 'text' }
      .row
        .col.s6.m4.input-field
          %legend
            Curation Status
            %p
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_SKIPPED, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_SKIPPED), data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_SKIPPED
            %p
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_MAPPED,  checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_MAPPED), data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_MAPPED
        .col.s6.m8
          .redcap_variable_map_form{ class: "#{hide_redcap_variable_map(@redcap_variable.curation_status)}" }
            = form.fields_for :redcap_variable_map  do |redcap_variable_map_form|
              = redcap_variable_map_form.hidden_field :id
              = redcap_variable_map_form.hidden_field :_destroy
              .col.s6.m4.input-field.map_type
                %legend.left-align
                  Map Type
                  %p.left-align
                    %label
                      = redcap_variable_map_form.radio_button :map_type, Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_COLUMN, checked: redcap_variable_map_form.object.map_type == Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_COLUMN, data: { action: 'change->redcap-variable#changeMapType' }
                      %span
                        = Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_COLUMN
                  %p.left-align
                    %label
                      = redcap_variable_map_form.radio_button :map_type, Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT, checked: redcap_variable_map_form.object.map_type == Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT, data: { action: 'change->redcap-variable#changeMapType' }
                      %span
                        = Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT
                  %p.left-align
                    %label
                      = redcap_variable_map_form.radio_button :map_type, Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT_CHOICE, checked: redcap_variable_map_form.object.map_type == Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT_CHOICE, data: { action: 'change->redcap-variable#changeMapType' }
                      %span
                        = Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT_CHOICE
                  - if validation_errors?(redcap_variable_map_form.object, :map_type)
                    %p.error= format_validation_errors(redcap_variable_map_form.object, :map_type)
              .col.s6.m4.input-field.concept_id{ class: "#{hide_hide_redcap_variable_map_concept_id(@redcap_variable)}" }
                = link_to '', concepts_url(), class: 'hide', id: 'concepts_url'
                %label
                  %span
                    Concept
                  = redcap_variable_map_form.select :concept_id, options_for_select(@concepts.map { |concept| [concept.concept_name, concept.concept_id] }, redcap_variable_map_form.object.concept_id), { include_blank: true }, class: 'concept-select2', data: { placeholder: 'Search concept'}
                  - if validation_errors?(redcap_variable_map_form.object, :concept_id)
                    %p.error= format_validation_errors(redcap_variable_map_form.object, :concept_id)
        .col.s12.right-align
          %button{ :type => 'submit', class: 'waves-effect waves-light btn' }
            Submit
          = link_to "Cancel", redcap_project_redcap_data_dictionary_redcap_variable_url(@redcap_project, @redcap_variable), class: 'waves-effect waves-light btn red'