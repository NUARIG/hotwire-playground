%h2
  Editing Variable
= turbo_frame_tag dom_id(@redcap_variable)  do
  %li.collection-item{ id: 'redcap_variable' }
    = form_with(model: @redcap_variable, url: redcap_project_redcap_data_dictionary_redcap_variable_url(@redcap_project, @redcap_variable), method: 'patch', html: { id: dom_id(@redcap_variable), class: 'redcap_variable_form', data: { controller: 'redcap-variable', "redcap-variable-target" => 'redcapVariableForm' }}) do |form|
      %template{ data: { 'redcap-variable-target' => 'omopConceptFilter' } }
        %ul.collapsible.omop-concept-filter
          %li
            .collapsible-header
              %i.material-icons.red-text> fiber_manual_record
              Domain
            .collapsible-body
              / = search_field_tag 'domain'
              - Redcap2omop::DataServices::RedcapToOmop::MAPPABLE_DOMAINS.sort.each do |domain|
                %div
                  %label
                    = check_box_tag domain, domain, checked=false, class: 'domain'
                    %span
                      = domain
          %li
            .collapsible-header
              %i.material-icons.cyan-text> fiber_manual_record
              Concept
            .collapsible-body
              %div
                %label
                  = check_box_tag 'Classification', 'Classification', checked=false, class: 'concept'
                  %span
                    = 'Classification'
              %div
                %label
                  = check_box_tag 'Non-standard', 'Non-standard', checked=false, class: 'concept'
                  %span
                    = 'Non-Standard'
              %div
                %label
                  = check_box_tag 'Standard', 'Standard', checked=false, class: 'concept'
                  %span
                    = 'Standard'
      .row
        .col.s12.left-align
          %h3
            = @redcap_variable.name
      .row
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_form_name'}
            Form Name
          %input{ id: 'redcap_variable_form_name', disabled: 'disabled', value: @redcap_variable.form_name, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_type'}
            Field Type
          %input{ id: 'redcap_variable_field_type', disabled: 'disabled', value: @redcap_variable.field_type, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_type_normalized'}
            Field Type Normalized
          %input{ id: 'redcap_variable_field_type_normalized', disabled: 'disabled', value: @redcap_variable.field_type_normalized, type: 'text' }
      .row
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_type_curated'}
            Field Type Curated
          %input{ id: 'redcap_variable_field_type_curated', disabled: 'disabled', value: @redcap_variable.field_type_curated, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_text_validation_type'}
            Text Validation Type
          %input{ id: 'redcap_variable_text_validation_type', disabled: 'disabled', value: @redcap_variable.text_validation_type, type: 'text' }
        .col.s6.m4.input-field
          %label{ for: 'redcap_variable_field_annotation'}
            Field Annotation
          %input{ id: 'redcap_variable_field_annotation', disabled: 'disabled', value: @redcap_variable.field_annotation, type: 'text' }
      .row
        .col.s6.m4.input-field
          %legend.left-align
            Curation Status
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED), disabled: true, data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_NEW_VARIABLE, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_NEW_VARIABLE), disabled: true, data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_NEW_VARIABLE
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_TYPE, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_TYPE), disabled: true, data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_TYPE
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_LABEL, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_LABEL), disabled: true, data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_LABEL
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_CHOICES, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_CHOICES), disabled: true, data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_UNDETERMINED_UPDATED_VARIABLE_CHOICES
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_SKIPPED, checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_SKIPPED), data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_SKIPPED
            %p.left-align
              %label
                = form.radio_button :curation_status, Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_MAPPED,  checked: (@redcap_variable.curation_status == Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_MAPPED), data: { action: 'change->redcap-variable#changeCurationStatus' }
                %span
                  = Redcap2omop::RedcapVariable::REDCAP_VARIABLE_CURATION_STATUS_MAPPED
        .col.s6.m8
          .redcap_variable_map_form{ class: "#{hide_redcap_variable_map(@redcap_variable)}" }
            = form.fields_for :redcap_variable_map  do |redcap_variable_map_form|
              = redcap_variable_map_form.hidden_field :id
              = redcap_variable_map_form.hidden_field :_destroy
              .col.s6.m4.input-field.map_type
                %legend.left-align
                  Map Type
                  %p.left-align
                    %label
                      = redcap_variable_map_form.radio_button :map_type, Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT, checked: redcap_variable_map_form.object.map_type == Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT, data: { action: 'change->redcap-variable#changeMapType' }
                      %span
                        = Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT
                  %p.left-align
                    %label
                      = redcap_variable_map_form.radio_button :map_type, Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT_CHOICE, checked: redcap_variable_map_form.object.map_type == Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT_CHOICE, data: { action: 'change->redcap-variable#changeMapType' }
                      %span
                        = Redcap2omop::RedcapVariableMap::REDCAP_VARIABLE_MAP_MAP_TYPE_OMOP_CONCEPT_CHOICE
                  - if validation_errors?(redcap_variable_map_form.object, :map_type)
                    %p.error= format_validation_errors(redcap_variable_map_form.object, :map_type)
              .col.s6.m4.input-field.concept_id{ class: "#{hide_redcap_variable_map_concept_id(@redcap_variable)}" }
                = link_to '', concepts_url(), class: 'hide', id: 'concepts_url'
                = hidden_field_tag 'redcap_variable_map_concept_domain_id', (redcap_variable_map_form.object.concept.present? ? redcap_variable_map_form.object.concept.domain_id : nil )
                %label
                  %span
                    Concept
                  = redcap_variable_map_form.select :concept_id, options_for_select(@concepts.map { |concept| [concept.full_name, concept.concept_id] }, redcap_variable_map_form.object.concept_id), { include_blank: true }, id: "redcap_variable_redcap_variable_map_attributes_#{SecureRandom.uuid.to_s}_concept_id", class: 'concept-select2', data: { placeholder: 'Search concept', action:'change->redcap-variable#changeRedcpVariableMapConceptId' }
                  - if validation_errors?(redcap_variable_map_form.object, :concept_id)
                    %p.error= format_validation_errors(redcap_variable_map_form.object, :concept_id)

      .redcap_variable_child_maps{ class: "#{hide_redcap_variable_child_maps(@redcap_variable)}" }
        .row
          .col.s12.left-align.nested-form{"data-controller" => "nested-form", "data-nested-form-index-value" => "REDCAP_VARIABLE_CHILD_RECORD"}
            %h4
              Child Maps
            %template{"data-nested-form-target" => "template"}
              = form.fields_for :redcap_variable_child_maps, Redcap2omop::RedcapVariableChildMap.new(parentable: @redcap_variable), child_index: 'REDCAP_VARIABLE_CHILD_RECORD' do |redcap_variable_child_map|
                = render 'redcap_variable_child_map', form: redcap_variable_child_map, stimulusController: 'redcap-variable-redcap-variable-child-maps'
            %table
              %thead
                %tr
                  %th.redcap_variable_child_map_map_type{ width: 200 }
                    Map Type
                  %th.redcap_variable_child_map_omop_column_id{ width: 300 }
                    OMOP Column
                  %th.redcap_variable_child_map_redcap_variable_id{ width: 300 }
                    REDCap Variable
                  %th.redcap_variable_child_map_redcap_concept_id{ width: 200 }
                    Concept
                  %th.redcap_variable_child_map_redcap_derived_date{ width: 200 }
                    Derived Date
                  %th{ width: 200 }
              %tbody{"data-nested-form-target" => "list"}
                = form.fields_for :redcap_variable_child_maps do |redcap_variable_child_map|
                  = render 'redcap_variable_child_map', form: redcap_variable_child_map, stimulusController: 'redcap-variable-redcap-variable-child-maps'
            %div{ class: 'add_item' , "data-nested-form-target" => "add_item"}
              = link_to "Add Child Map", "#", class: 'waves-effect waves-light btn' , data: { action: "nested-form#add_association" }
      - if @redcap_variable.choice?
        .redcap_variable_choices{ class: "#{hide_redcap_variable_choices(@redcap_variable)}" }
          .row
            .col.s12.left-align
              %h4
                Choices
              %hr
          .row
            .col.s12
              = form.fields_for :redcap_variable_choices, @redcap_variable.redcap_variable_choices.sort_by(&:id) do |redcap_variable_choice_form|
                = content_tag(:div, class: 'redcap_variable_choice', id: "redcap_variable_choice_id_#{redcap_variable_choice_form.object.id}",  data: { controller: 'redcap-variable-choice', "redcap-variable-choice-target" => 'redcapVariableChoice' } ) do
                  .row
                    = redcap_variable_choice_form.hidden_field :id
                    .col.s6.m4.left-align
                      %h5
                        = redcap_variable_choice_form.object.choice_description
                    .col.s6.m4.input-field
                      %label{ for: 'redcap_variable_choice_choice_code_raw'}
                        Raw Code
                      %input{ id: 'redcap_variable_choice_choice_code_raw', disabled: 'disabled', value: redcap_variable_choice_form.object.choice_code_raw, type: 'text' }
                    .col.s6.m4.input-field
                      %label{ for: 'redcap_variable_choice_vocabulary_id_raw'}
                        Vocabulary ID
                      %input{ id: 'redcap_variable_choice_vocabulary_id_raw', disabled: 'disabled', value: redcap_variable_choice_form.object.vocabulary_id_raw, type: 'text' }
                  .row
                    .col.s6.m4.input-field
                      %legend.left-align
                        Curation Status
                        %p.left-align
                          %label
                            = redcap_variable_choice_form.radio_button :curation_status, Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED, checked: (redcap_variable_choice_form.object.curation_status == Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED), disabled: true, data: { action: 'change->redcap-variable#changeRedcapVariableChoiceCurationStatus' }
                            %span
                              = Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED
                        %p.left-align
                          %label
                            = redcap_variable_choice_form.radio_button :curation_status, Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED_NEW_CHOICE, checked: (redcap_variable_choice_form.object.curation_status == Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED_NEW_CHOICE), disabled: true, data: { action: 'change->redcap-variable#changeRedcapVariableChoiceCurationStatus' }
                            %span
                              = Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED_NEW_CHOICE
                        %p.left-align
                          %label
                            = redcap_variable_choice_form.radio_button :curation_status, Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED_UPDATED_DESCRIPTION, checked: (redcap_variable_choice_form.object.curation_status == Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED_UPDATED_DESCRIPTION), disabled: true, data: { action: 'change->redcap-variable#changeRedcapVariableChoiceCurationStatus' }
                            %span
                              = Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_UNDETERMINED_UPDATED_DESCRIPTION
                        %p.left-align
                          %label
                            = redcap_variable_choice_form.radio_button :curation_status, Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_SKIPPED, checked: (redcap_variable_choice_form.object.curation_status == Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_SKIPPED), data: { action: 'change->redcap-variable#changeRedcapVariableChoiceCurationStatus' }
                            %span
                              = Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_SKIPPED
                        %p.left-align
                          %label
                            = redcap_variable_choice_form.radio_button :curation_status, Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_MAPPED, checked: (redcap_variable_choice_form.object.curation_status == Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_MAPPED), data: { action: 'change->redcap-variable#changeRedcapVariableChoiceCurationStatus' }
                            %span
                              = Redcap2omop::RedcapVariableChoice::REDCAP_VARIABLE_CHOICE_CURATION_STATUS_MAPPED
                    .col.s6.m4.input-field.redcap_variable_choice_concept_id{ class: "#{hide_redcap_variable_choice_map_concept_id(redcap_variable_choice_form.object)}" }
                      = link_to '', concepts_url(), class: 'hide', id: 'concepts_url'
                      = hidden_field_tag 'redcap_variable_choice_map_concept_domain_id', (redcap_variable_choice_form.object.redcap_variable_choice_map.present? ? redcap_variable_choice_form.object.redcap_variable_choice_map.concept.domain_id : nil )
                      %label
                        %span
                          Concept
                        - concept = redcap_variable_choice_form.object.redcap_variable_choice_map.present? ? redcap_variable_choice_form.object.redcap_variable_choice_map.concept : nil
                        = redcap_variable_choice_form.select :concept_id, options_for_select([concept].compact.map { |concept| [concept.full_name, concept.concept_id] }, redcap_variable_choice_form.object.concept_id), { include_blank: true }, class: 'concept-select2', data: { placeholder: 'Search concept', action:'change->redcap-variable-choice#changeRedcpVariableChoiceMapConceptId' }
                        - if validation_errors?(redcap_variable_choice_form.object, :concept_id)
                          %p.error= format_validation_errors(redcap_variable_choice_form.object, :concept_id)

                  .row
                    .col.s12.m12
                      = content_tag(:div, class: "redcap_variable_choice_redcap_variable_child_maps #{hide_redcap_variable_chocie_redcap_variable_child_maps(@redcap_variable)}", id: "redcap_variable_choice_id#{redcap_variable_choice_form.object.id}_redcap_variable_child_maps") do
                        .row
                          .col.s12.left-align.nested-form{"data-controller" => "nested-form", "data-nested-form-index-value" => "REDCAP_VARIABLE_CHILD_RECORD"}
                            %h4
                              Child Maps
                            %template{"data-nested-form-target" => "template"}
                              = redcap_variable_choice_form.fields_for :redcap_variable_child_maps, Redcap2omop::RedcapVariableChildMap.new(parentable: redcap_variable_choice_form.object), child_index: 'REDCAP_VARIABLE_CHILD_RECORD' do |redcap_variable_child_map|
                                = render 'redcap_variable_child_map', form: redcap_variable_child_map, stimulusController: 'redcap-variable-choice-redcap-variable-child-maps'
                            %table
                              %thead
                                %tr
                                  %th.redcap_variable_child_map_map_type{ width: 200 }
                                    Map Type
                                  %th.redcap_variable_child_map_omop_column_id{ width: 300 }
                                    OMOP Column
                                  %th.redcap_variable_child_map_redcap_variable_id{ width: 300 }
                                    REDCap Variable
                                  %th.redcap_variable_child_map_redcap_concept_id{ width: 200 }
                                    Concept
                                  %th.redcap_variable_child_map_redcap_derived_date{ width: 200 }
                                    Derived Date
                                  %th{ width: 200 }
                              %tbody{"data-nested-form-target" => "list"}
                                = redcap_variable_choice_form.fields_for :redcap_variable_child_maps do |redcap_variable_child_map|
                                  = render 'redcap_variable_child_map', form: redcap_variable_child_map, stimulusController: 'redcap-variable-choice-redcap-variable-child-maps'
                            %div{ class: 'add_item' , "data-nested-form-target" => "add_item"}
                              = link_to "Add Child Map", "#", class: 'waves-effect waves-light btn' , data: { action: "nested-form#add_association" }
                  %hr
      .row
        .col.s12.right-align
          %button{ :type => 'submit', class: 'waves-effect waves-light btn' }
            Submit
          = link_to "Cancel", redcap_project_redcap_data_dictionary_redcap_variable_url(@redcap_project, @redcap_variable), class: 'waves-effect waves-light btn red'